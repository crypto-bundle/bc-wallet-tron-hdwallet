syntax = "proto3";

package hdwallet_api;

option go_package = "gitlab.heronodes.io/bc-platform/bc-wallet-tron-hdwallet/pkg/grpc";

enum WalletMakerStrategy {
  PLACEHOLDER_STRATEGY_TYPE = 0;
  SINGLE_MNEMONIC_STRATEGY_TYPE = 1;
  MULTIPLE_MNEMONIC_STRATEGY_TYPE = 2;
}

message DerivationAddressIdentity {
  uint32 AccountIndex = 1;
  uint32 InternalIndex = 2;
  uint32 AddressIndex = 3;

  string Address = 4;
}

message GetEnabledWalletsRequest {
}

message MnemonicWalletIdentity {
  string WalletUUID = 1;
  string WalletHash = 2;
}

message MnemonicWalletData {
  MnemonicWalletIdentity Identity = 1;
  bool IsHot = 2;
}

message WalletIdentity {
  string WalletUUID = 1;
}

message WalletBookmarks {
  uint32 HotWalletIndex = 1;
  repeated uint32 NonHotWalletIndexes = 2;
}

message WalletData {
  WalletIdentity Identity = 1;
  string Title = 2;
  string Purpose = 3;
  WalletMakerStrategy Strategy = 4;
  uint32 MnemonicWalletCount = 5;
  WalletBookmarks Bookmarks = 6;
  repeated MnemonicWalletData MnemonicWallets = 7;
}

message GetEnabledWalletsResponse {
  uint32 WalletsCount = 1;
  repeated WalletData Wallets = 2;
}

message AddNewWalletRequest {
  string Title = 1;
  string Purpose = 2;
  WalletMakerStrategy Strategy = 3;
}

message AddNewWalletResponse {
  WalletData Wallet = 1;
}

message DerivationAddressRequest {
  WalletIdentity WalletIdentity = 1;
  MnemonicWalletIdentity MnemonicIdentity = 2;
  DerivationAddressIdentity AddressIdentity = 3;
}

message DerivationAddressResponse {
  WalletIdentity WalletIdentity = 1;
  MnemonicWalletIdentity MnemonicIdentity= 2;
  DerivationAddressIdentity AddressIdentity = 3;
}

message DerivationAddressByRangeRequest {
  WalletIdentity WalletIdentity = 1;
  MnemonicWalletIdentity MnemonicIdentity = 2;
  uint32 AccountIndex = 3;
  uint32 InternalIndex = 4;
  uint32 AddressIndexFrom = 5;
  uint32 AddressIndexTo = 6;
}

message DerivationAddressByRangeResponse {
  WalletIdentity WalletIdentity = 1;
  MnemonicWalletIdentity MnemonicIdentity= 2;
  repeated DerivationAddressIdentity AddressIdentities = 3;
}

message SignTransactionRequest {
  string WalletUUID = 1;
  string MnemonicWalletUUID = 2;
  DerivationAddressIdentity AddressIdentity = 3;
  bytes CreatedTxData = 4;
}

message SignTransactionResponse {
  WalletIdentity WalletIdentity = 1;
  MnemonicWalletIdentity MnemonicIdentity= 2;
  DerivationAddressIdentity TxOwnerIdentity = 3;
  bytes SignedTxData = 4;
}

message GetWalletInfoRequest {
  WalletIdentity WalletIdentity = 1;
}

message GetWalletInfoResponse {
  WalletIdentity WalletIdentity = 1;
  WalletData WalletInfo = 2;
}

service HdWalletApi {
  rpc AddNewWallet                      (AddNewWalletRequest)                returns (AddNewWalletResponse) {}
  rpc GetWalletInfo                 (GetWalletInfoRequest)           returns (GetWalletInfoResponse) {}
  rpc GetEnabledWallets                 (GetEnabledWalletsRequest)           returns (GetEnabledWalletsResponse) {}
  rpc GetDerivationAddress              (DerivationAddressRequest)           returns (DerivationAddressResponse) {}
  rpc GetDerivationAddressByRange       (DerivationAddressByRangeRequest)    returns (DerivationAddressByRangeResponse) {}
  rpc SignTransaction                   (SignTransactionRequest)    returns (SignTransactionResponse) {}
}